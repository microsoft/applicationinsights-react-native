{"version":3,"file":"IDeviceInfoModule.js","sourceRoot":"","sources":["IDeviceInfoModule.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Interface to abstract how the plugin can access the Device Info, this is a stripped\n * down version of the \"react-native-device-info\" interface and is mostly supplied for\n * testing.\n */\nexport interface IDeviceInfoModule {\n    /**\n     * Returns the Device Model\n     */\n    getModel: () => string;\n\n    /**\n     * Returns the device type\n     */\n    getDeviceType: () => string;\n\n    /**\n     * Returns the unique Id for the device, to support both the current version and previous\n     * versions react-native-device-info, this may return either a `string` or `Promise<string>`,\n     * when a promise is returned the plugin will \"wait\" for the promise to `resolve` or `reject`\n     * before processing any events. This WILL cause telemetry to be BLOCKED until either of these\n     * states, so when returning a Promise it MUST `resolve` or `reject` it can't just never resolve.\n     * There is a default timeout configured via `uniqueIdPromiseTimeout` to automatically unblock\n     * event processing when this issue occurs.\n     */\n    getUniqueId: () => Promise<string> | string;\n}\n\n"]}