{"version":3,"file":"DeviceModule.js","sourceRoot":"","sources":["DeviceModule.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAElC,OAAO,EAAE,kBAAkB,EAAE,MAAM,wCAAwC,CAAC;AAG5E,MAAM,CAAC,IAAM,YAAY,GAAG,OAAO,CAAC;AACpC,MAAM,CAAC,IAAM,WAAW,GAAG,MAAM,CAAC;AAClC,MAAM,CAAC,IAAM,SAAS,GAAG,IAAI,CAAC;AAE9B;IAKI;QACI,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,MAAM,GAAW,IAAI,CAAC;QAC1B,IAAI,WAAW,GAAW,IAAI,CAAC;QAC/B,IAAI,SAAS,GAA6B,IAAI,CAAC;QAE/C,SAAS,SAAS;YACd,OAAO,MAAM,CAAC;QAClB,CAAC;QAED,SAAS,cAAc;YACnB,OAAO,WAAW,CAAC;QACvB,CAAC;QAED,SAAS,YAAY;YACjB,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,gEAAgE;QAChE,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC3B,KAAK,CAAC,aAAa,GAAG,cAAc,CAAC;QACrC,KAAK,CAAC,WAAW,GAAG,YAAY,CAAA;QAEhC,0EAA0E;QAC1E,kBAAkB,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,UAAC,KAAK,IAAK,OAAA,MAAM,GAAG,KAAK,EAAd,CAAc,CAAC,CAAC;QAC9E,kBAAkB,CAAC,KAAK,EAAE,WAAW,EAAE,cAAc,EAAE,UAAC,KAAK,IAAK,OAAA,WAAW,GAAG,KAAK,EAAnB,CAAmB,CAAC,CAAC;QACvF,kBAAkB,CAAC,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,UAAC,KAAK,IAAK,OAAA,SAAS,GAAG,KAAK,EAAjB,CAAiB,CAAC,CAAC;IACrF,CAAC;IACL,mBAAC;AAAD,CAAC,AAjCD,IAiCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { objDefineAccessors } from \"@microsoft/applicationinsights-core-js\";\nimport { IDeviceInfoModule } from \"../Interfaces/IDeviceInfoModule\";\n\nexport const DEVICE_MODEL = \"model\";\nexport const DEVICE_TYPE = \"type\";\nexport const UNIQUE_ID = \"id\";\n\nexport class DeviceModule implements IDeviceInfoModule {\n    public getModel: () => string;\n    public getDeviceType: () => string;\n    public getUniqueId: () => string | Promise<string>;\n\n    constructor() {\n        let _self = this;\n        let _model: string = null;\n        let _deviceType: string = null;\n        let _uniqueId: string | Promise<string> = null;\n\n        function _getModel() {\n            return _model;\n        }\n\n        function _getDeviceType() {\n            return _deviceType;\n        }\n\n        function _getUniqueId() {\n            return _uniqueId;\n        }\n\n        // Provide the public interface methods for accessing the values\n        _self.getModel = _getModel;\n        _self.getDeviceType = _getDeviceType;\n        _self.getUniqueId = _getUniqueId\n\n        // Provide setters (for testing) and re-use the functions for minification\n        objDefineAccessors(_self, DEVICE_MODEL, _getModel, (value) => _model = value);\n        objDefineAccessors(_self, DEVICE_TYPE, _getDeviceType, (value) => _deviceType = value);\n        objDefineAccessors(_self, UNIQUE_ID, _getUniqueId, (value) => _uniqueId = value);\n    }\n}"]}